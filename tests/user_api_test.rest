@baseURL = http://localhost:3000

@adopter_Token_Ok = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhZG9wdGVyXzFAaWZycy5lZHUuYnIiLCJyb2xlIjoiYWRvcHRlciIsImlhdCI6MTc1MTM5NDI4NSwiZXhwIjoxNzUxMzk3ODg1fQ.dzKHnUx3Uru0sZ-26ITTbtngN_uWEJWwnWcWEpShkG0

@admin_Token_Ok = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJhZG1pbl8xQGlmcnMuZWR1LmJyIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzUxMzkzMzQwLCJleHAiOjE3NTEzOTY5NDB9._931jhKg_8dwQK4wHQso6CyqApcCM-iKpwSDegOo6DQ





####################################################################################################
########## PUBLIC
####################################################################################################

### Criar um novo usuário
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "gilmar",
    "email": "gilmar@ifrs.com.br",
    "password": "hash_gilmar",
    "phone": "010101010101",
    "role":"adopter"
}

### Criar usuário com email inválido (erro esperado)
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "Teste Email Invalido",
    "email": "email_invalido"
}

### Criar usuário com email repetido (erro esperado)
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "admin_1",
    "email": "admin_1@ifrs.edu.br",
    "password": "hash_teste",
    "phone": "996821107",
    "role": "admin"
}





####################################################################################################
########## USER ONLY
####################################################################################################

### Login do usuário com senha correta (usuário já existente no banco)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "adopter_1@ifrs.edu.br",
    "password": "123456"
}

### Login do usuário com senha incorreta (erro esperado)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "tron@ifrs.com.br",
    "password": "hash_clu"
}

### Listar os usuários pelo ID (rota protegida, requer token de usuário com role "adopter")
GET {{baseURL}}/user/protected/getByID/1
Authorization: Bearer {{adopter_Token_Ok}}

### Atualizar dados do usuário pelo ID (rota protegida, requer token de usuário com role "adopter")
PUT {{baseURL}}/user/protected/update/1
Content-Type: application/json
Authorization: Bearer {{adopter_Token_Ok}}

{
    "name": "adopter_clu",
    "email": "adopter_clu@ifrs.edu.br",
    "password": "123456",
    "phone": "11001100",
    "role": "adopter"
}





####################################################################################################
########## ADMIN ONLY
####################################################################################################

### Login do admin com senha correta (usuário já existente no banco)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "admin_1@ifrs.edu.br",
    "password": "admin123"
}

### Login do admin com senha incorreta (erro esperado)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "admin_1@ifrs.edu.br",
    "password": "wrong_admin123"
}

### Listar todos usuários (rota protegida, requer token de usuário com role "admin")
GET {{baseURL}}/user/protected/getAll
Authorization: Bearer {{admin_Token_Ok}}

### Listar todos usuários (role incorreto - erro esperado)
GET {{baseURL}}/user/protected/getAll
Authorization: Bearer {{adopter_Token_Ok}}

### Listar os usuários pelo ID (rota protegida, requer token de usuário com role "admin")
GET {{baseURL}}/user/protected/getByID/16
Authorization: Bearer {{admin_Token_Ok}}

### Atualizar dados do usuário pelo ID (rota protegida, requer token de usuário com role "admin")
PUT {{baseURL}}/user/protected/update/13
Content-Type: application/json
Authorization: Bearer {{admin_Token_Ok}}

{
    "name": "tron",
    "email": "tron11@ifrs.edu.br",
    "password": "hash_tron",
    "phone": "11001100",
    "role": "user"
}

### Deletar usuário pelo ID (rota protegida, requer token de usuário com role "admin")
DELETE {{baseURL}}/user/protected/delete/13
Accept: application/json
Authorization: Bearer {{admin_Token_Ok}}

### Deletar usuário pelo ID (role incorreto - erro esperado)
DELETE {{baseURL}}/user/protected/delete/11
Accept: application/json
Authorization: Bearer {{adopter_Token_Ok}}