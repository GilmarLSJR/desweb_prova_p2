@baseURL = http://localhost:3000

@adopter_Token_Ok = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjAsImVtYWlsIjoiYWRvcHRlcjFAaWZycy5jb20uYnIiLCJyb2xlIjoiYWRvcHRlciIsImlhdCI6MTc1MTQwNDAwMywiZXhwIjoxNzUxNDA3NjAzfQ.4VvMSEF7vaARVvCgYdPubx2vTMbw745Er_Anqjvnr10

@admin_Token_Ok = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjEsImVtYWlsIjoiYWRtaW4xQGlmcnMuY29tLmJyIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzUxNDA0MDcxLCJleHAiOjE3NTE0MDc2NzF9.E467TbhY1kDryfTUv7IHEEaUTAPyUFQy_XhxMwVMOdA





####################################################################################################
########## PUBLIC
####################################################################################################

### Criar um novo usuário
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "adopter1",
    "email": "adopter1@ifrs.com.br",
    "password": "adopter1_password",
    "phone": "010101010101",
    "role":"adopter"
}

### Criar usuário com email inválido (erro esperado)
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "Teste Email Invalido",
    "email": "email_invalido"
}

### Criar usuário com email repetido (erro esperado)
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "admin1",
    "email": "admin1@ifrs.com.br",
    "password": "admin1_password",
    "phone": "996821107",
    "role": "admin"
}

### Criar outro usuário
POST {{baseURL}}/user/public/create
Content-Type: application/json

{
    "name": "adopter_2",
    "email": "adopter_2@ifrs.com.br",
    "password": "adopter2_password",
    "phone": "996821107",
    "role": "adopter"
}





####################################################################################################
########## USER ONLY
####################################################################################################

### Login do usuário com senha correta (usuário já existente no banco)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "adopter1@ifrs.com.br",
    "password": "adopter1_password"
}

### Login do usuário com senha incorreta (erro esperado)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "adopter1@ifrs.com.br",
    "password": "hash_clu"
}

### Listar os usuários pelo ID (rota protegida, requer token de usuário com role "adopter")
GET {{baseURL}}/user/protected/getByID/20
Authorization: Bearer {{adopter_Token_Ok}}

### Atualizar dados do usuário pelo ID (rota protegida, requer token de usuário com role "adopter")
PUT {{baseURL}}/user/protected/update/20
Content-Type: application/json
Authorization: Bearer {{adopter_Token_Ok}}

{
    "name": "adopter_clu",
    "email": "adopter_clu@ifrs.com.br",
    "password": "hash_clu",
    "phone": "11001100",
    "role": "adopter"
}





####################################################################################################
########## ADMIN ONLY
####################################################################################################

### Login do admin com senha correta (usuário já existente no banco)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "admin1@ifrs.com.br",
    "password": "admin1_password"
}

### Login do admin com senha incorreta (erro esperado)
POST {{baseURL}}/user/public/login
Content-Type: application/json

{
    "email": "admin1@ifrs.edu.br",
    "password": "wrong_admin123"
}

### Listar todos usuários (rota protegida, requer token de usuário com role "admin")
GET {{baseURL}}/user/protected/getAll
Authorization: Bearer {{admin_Token_Ok}}

### Listar todos usuários (role incorreto - erro esperado)
GET {{baseURL}}/user/protected/getAll
Authorization: Bearer {{adopter_Token_Ok}}

### Listar os usuários pelo ID (rota protegida, requer token de usuário com role "admin")
GET {{baseURL}}/user/protected/getByID/20
Authorization: Bearer {{admin_Token_Ok}}

### Atualizar dados do usuário pelo ID (rota protegida, requer token de usuário com role "admin")
PUT {{baseURL}}/user/protected/update/20
Content-Type: application/json
Authorization: Bearer {{admin_Token_Ok}}

{
    "name": "adopter_tron",
    "email": "adopter_tron@ifrs.com.br",
    "password": "hash_tron",
    "phone": "11001100",
    "role": "adopter"
}

### Deletar usuário pelo ID (rota protegida, requer token de usuário com role "admin")
DELETE {{baseURL}}/user/protected/delete/22
Accept: application/json
Authorization: Bearer {{admin_Token_Ok}}

### Deletar usuário pelo ID (role incorreto - erro esperado)
DELETE {{baseURL}}/user/protected/delete/19
Accept: application/json
Authorization: Bearer {{adopter_Token_Ok}}